import json

"""Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
Если фирма получила убытки, в расчет средней прибыли ее не включать."""

d1 = {}                 # словарь с фирмами и их прибылями
total_profit = 0        # счетчик общей прибыли по всем фирмам с неотрицательной прибылью
count = 0               # счетчик фирм с неотрицательным значением прибыли
with open('file_for_task7.txt', 'r', encoding='utf-8') as file:
    for line in file:
        new_line = line.strip().split()                     # разделяем строку на отдельные элементы
        name, form, cash, cost = new_line[0], new_line[1], int(new_line[2]), int(new_line[3])   # отдельные эл-ты
        profit = cash - cost                                # вычисляем прибыль для фирмы
        firm_stat = [name, form, cash, cost, profit]        # сохраняем элементы и значение прибыли в список
        if firm_stat[4] > 0:                    # пополняем счетчик неотрицательной прибыли и фирм с неотр. прибылью
            total_profit += firm_stat[4]
            count += 1

        d1[firm_stat[0]] = firm_stat[4]         # создаем словарь с фирмами и их прибылями (и убытками)
    avg_profit = total_profit / count           # считаем среднюю прибыль
    d2 = {'average_profit': avg_profit}         # создаем словарь со средней прибылью

"""Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью. 
   Если фирма получила убытки, также добавить ее в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}]."""

res_data = [d1, d2]
print(res_data)

"""Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]"""

with open('file_for_task7.json', 'w') as file_j:
    json.dump(res_data, file_j)